{"version":3,"file":"static/js/215.9e68d0b9.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/ExtraInfo/ExtraInfo.styled.js","components/ExtraInfo/ExtraInfo.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieWrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 10px;\n  }\n`;\n\nexport const Thumb = styled.div`\n  display: block;\n  margin-bottom: 10px;\n  min-width: 300px;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const Poster = styled.img`\n  object-fit: cover;\n`;\n\nexport const InfoLayer = styled.div`\n  display: block;\n  padding: 15px;\n  background: rgba(0, 0, 0, 0.17);\n  border-radius: 5px;\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(6.9px);\n  -webkit-backdrop-filter: blur(6.9px);\n`;\n\nexport const MovieTitle = styled.h1`\n  margin-bottom: 10px;\n  font-size: 30px;\n  font-weight: 600;\n  color: #bd7c15;\n`;\n\nexport const InfoWrapper = styled.div`\n  display: block;\n`;\n\nexport const InfoTitle = styled.h2`\n  margin-bottom: 10px;\n  font-size: 25px;\n  font-weight: 500;\n  color: #bd7c15;\n`;\n\nexport const Info = styled.div`\n  margin-bottom: 10px;\n  font-size: 16px;\n`;\n\nexport const GoBackBtn = styled(Link)`\n  display: flex;\n  gap: 5px;\n  width: 120px;\n  align-items: center;\n  margin-bottom: 10px;\n  padding: 5px 15px;\n  border-radius: 5px;\n  color: #ffffff;\n  font-weight: 700;\n  background-color: rgb(78, 1, 83);\n\n  transition: color 250ms ease-in;\n\n  &:hover,\n  &:focus {\n    color: #bd7c15;\n  }\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ExtraButtonsWrapper = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ExtraButtons = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const ExtraLink = styled(NavLink)`\n  padding: 5px 15px;\n  border-radius: 5px;\n  color: #ffffff;\n  font-weight: 700;\n  background-color: rgb(78, 1, 83);\n\n  transition: color 250ms ease-in;\n\n  &.active {\n    color: #bd7c15;\n  }\n\n  &:hover,\n  &:focus {\n    color: #bd7c15;\n  }\n`;\n","import { InfoTitle } from 'components/MovieCard/MovieCard.styled';\nimport {\n  ExtraButtons,\n  ExtraButtonsWrapper,\n  ExtraLink,\n} from './ExtraInfo.styled';\n\nconst ExtraInfo = () => {\n  return (\n    <ExtraButtonsWrapper>\n      <InfoTitle>More info</InfoTitle>\n      <ExtraButtons>\n        <li>\n          <ExtraLink to={'cast'}>Cast</ExtraLink>\n        </li>\n        <li>\n          <ExtraLink to={'reviews'}>Reviews</ExtraLink>\n        </li>\n      </ExtraButtons>\n    </ExtraButtonsWrapper>\n  );\n};\n\nexport default ExtraInfo;\n","import PropTypes from 'prop-types';\nimport {\n  MovieWrapper,\n  Poster,\n  Thumb,\n  MovieTitle,\n  InfoTitle,\n  Info,\n  InfoWrapper,\n} from './MovieCard.styled';\nimport PosterPlaceholder from '../../images/poster-placeholder.png';\nimport { posterBaseURL } from 'services/api';\n\nconst MovieCard = ({\n  id,\n  info: { title, poster_path, release_date, vote_average, overview, genres },\n}) => {\n  return (\n    <MovieWrapper key={id}>\n      <Thumb>\n        <Poster\n          src={\n            poster_path\n              ? `${posterBaseURL}w500/${poster_path}`\n              : PosterPlaceholder\n          }\n          alt={title}\n        />\n      </Thumb>\n      <InfoWrapper>\n        <MovieTitle>\n          {title} ({release_date && `${release_date.slice(0, 4)}`})\n        </MovieTitle>\n        <Info>User score: {Math.round(vote_average * 10)}%</Info>\n        <InfoTitle>Overview</InfoTitle>\n        <Info>\n          {overview ? overview : <Info>No info to be displayed</Info>}\n        </Info>\n        <InfoTitle>Genres</InfoTitle>\n        {genres?.length > 0 ? (\n          <Info>\n            <ul>\n              {genres.map(({ id, name }) => (\n                <li key={id}> {name} </li>\n              ))}\n            </ul>\n          </Info>\n        ) : (\n          <Info>No info</Info>\n        )}\n      </InfoWrapper>\n    </MovieWrapper>\n  );\n};\n\nMovieCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  info: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import ExtraInfo from 'components/ExtraInfo/ExtraInfo';\nimport Loader from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { GoBackBtn, InfoLayer } from 'components/MovieCard/MovieCard.styled';\nimport { useEffect, useState, useRef, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/api';\nimport { MdArrowBack } from 'react-icons/md';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backBtnLocation = useRef(location.state?.from ?? '/movies');\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieInfo, setMovieInfo] = useState({});\n  const [error, setError] = useState(null);\n\n  const { movie_id } = useParams();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getMovieById(movie_id);\n        setMovieInfo(data);\n      } catch (error) {\n        setError(error.message);\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [movie_id]);\n\n  return (\n    <InfoLayer>\n      {isLoading && <Loader />}\n      {error && <p>Sorry, there is no information</p>}\n      <GoBackBtn to={backBtnLocation.current}>\n        <MdArrowBack />\n        Go back\n      </GoBackBtn>\n      {!error && movieInfo && (\n        <>\n          <MovieCard id={movie_id} info={movieInfo} />\n          <ExtraInfo />\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </InfoLayer>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\n// const API_KEY = '8efa744d01468dd41fac44eaa859e834';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4ZWZhNzQ0ZDAxNDY4ZGQ0MWZhYzQ0ZWFhODU5ZTgzNCIsInN1YiI6IjY0NzBkZWQyMzM2ZTAxMDBhYWUwZDAwMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Kj3f9MgwcJwqZWcXrgfWqjiiEMuo7IcJ2XaoXJsAKQw',\n  },\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n    options\n  );\n  return response.data.results;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return response.data.results;\n};\n\nexport const getMovieById = async movie_id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\nexport const getCast = async movie_id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits?language=en-US`,\n    options\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movie_id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}/reviews?language=en-US&page=1`,\n    options\n  );\n  return response.data.results;\n};\n\nexport const posterBaseURL = 'https://image.tmdb.org/t/p/';\n"],"names":["MovieWrapper","styled","Thumb","Poster","InfoLayer","MovieTitle","InfoWrapper","InfoTitle","Info","GoBackBtn","Link","ExtraButtonsWrapper","ExtraButtons","ExtraLink","NavLink","to","id","info","title","poster_path","release_date","vote_average","overview","genres","src","posterBaseURL","PosterPlaceholder","alt","slice","Math","round","length","map","name","location","useLocation","backBtnLocation","useRef","state","from","useState","isLoading","setIsLoading","movieInfo","setMovieInfo","error","setError","movie_id","useParams","useEffect","fetchMovie","getMovieById","data","message","console","log","Loader","current","Suspense","fallback","options","method","headers","accept","Authorization","getTrending","axios","response","results","getMovies","query","getCast","cast","getReviews"],"sourceRoot":""}